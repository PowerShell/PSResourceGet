name: $(BuildDefinitionName)-$(date:yyMM).$(date:dd)$(rev:rrr)
trigger:
  # Batch merge builds together while a merge build is running
  batch: true
  branches:
    include:
    - master
pr:
  branches:
    include:
    - master

resources:
  repositories:
  - repository: ComplianceRepo
    type: github
    endpoint: ComplianceGHRepo
    name: PowerShell/compliance

stages:
- stage: Build
  displayName: Build PowerShellGet Module Package
  jobs:
  - job: BuildPkg
    displayName: Build Package
    pool:
      vmImage: windows-latest

    steps:

    - pwsh: |
        Get-ChildItem -Path env:
        Get-ChildItem -Path env:
      displayName: Capture environment for build
      condition: succeededOrFailed()

    - pwsh: |
        Write-Verbose -Verbose "Install PowerShellGet V3"
        Install-Module -Name PowerShellGet -RequiredVersion 3.0.16-beta16 -AllowPrerelease -Force
        Write-Verbose -Verbose "Install PlatyPS"
        Install-Module -Name "platyPS" -Force
        Write-Verbose -Verbose "Install PSScriptAnalyzer"
        Install-Module -Name "PSScriptAnalyzer" -Force
        Write-Verbose -Verbose "Install Pester 5.X"
        Install-Module -Name "Pester" -MinimumVersion 5.0 -Force
      displayName: Install PowerShellGet and build dependencies

    - pwsh: |
        # Build for netstandard2.0 framework
        $(Build.SourcesDirectory)/build.ps1 -Build -Clean -BuildConfiguration Release -BuildFramework 'netstandard2.0'
      displayName: Build and publish artifact

    - pwsh: |
        Write-Verbose -Verbose "Importing PowerShellGet"
        Import-Module -Name PowerShellGet -Verbose
        Write-Verbose -Verbose "Importing helpBuild from: $($Build.SourcesDirectory)"
        . $(Build.SourcesDirectory)/helpBuild.ps1
        $config = Get-ProjectConfiguration
        #
        $srcModulePath = Resolve-Path -Path "$($config.BuildOutputPath)/$($config.ModuleName)"
        Get-ChildItem $srcModulePath
        $artifactName = "$($config.ModuleName)"
        Write-Host "##vso[artifact.upload containerfolder=$artifactName;artifactname=$artifactName;]$srcModulePath"
        #
        $(Build.SourcesDirectory)/build.ps1 -Publish
      displayName: Create module artifact

- stage: Compliance
  displayName: Compliance
  dependsOn: Build
  jobs:
  - job: ComplianceJob
    pool:
      vmImage: windows-latest
    steps:
    - checkout: self
      clean: true
    - checkout: ComplianceRepo
      clean: true
    - download: current
      artifact: 'PowerShellGet'
    - template: ci-compliance.yml@ComplianceRepo
      parameters:
        # credscan
        suppressionsFile: ''

- stage: Test
  displayName: Test Package
  dependsOn: Build
  jobs:
  - template: test.yml
    parameters:
      jobName: TestPkgWin
      displayName: PowerShell Core on Windows
      imageName: windows-latest
  
  - template: test.yml
    parameters:
      jobName: TestPkgWinPS
      displayName: Windows PowerShell on Windows
      imageName: windows-latest
      powershellExecutable: powershell

  - template: test.yml
    parameters:
      jobName: TestPkgUbuntu
      displayName: PowerShell Core on Ubuntu
      imageName: ubuntu-latest

  - template: test.yml
    parameters:
      jobName: TestPkgWinMacOS
      displayName: PowerShell Core on macOS
      imageName: macOS-latest
      